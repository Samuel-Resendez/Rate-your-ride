// Create a file tree with a base directory
def tree = fileTree(dir: 'src/main')

// Add include and exclude patterns to the tree
tree.include '**/*.java'
tree.exclude '**/Abstract*'

// Create a tree using path
tree = fileTree('src').include('**/*.java')

// Create a tree using closure
tree = fileTree {
    from 'src'
    include '**/*.java'
}

// Create a tree using a map
tree = fileTree(dir: 'src', includes: ['**/*.java'])

// Iterate over the contents of a tree
tree.each {File file ->
    println file
}

// Filter a tree
def filtered = tree.matching {
    include 'org/gradle/api/**'
}

// Add trees together
def sum = tree + fileTree(dir: 'src/test')

// Visit the nodes of the tree
tree.visit {node ->
    println "$node.relativePath => $node.file"
}
