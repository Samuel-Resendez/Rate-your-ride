import java.util.concurrent.Callable

FileCollection collection = files('src/file1.txt', file('src/file2.txt'), ['src/file3.txt', 'src/file4.txt'])

file('src').mkdirs()
file('src/dir1').mkdirs()
file('src/file1.txt').mkdirs()
file('src2').mkdirs()
file('src2/dir1').mkdirs()
file('src2/dir2').mkdirs()

task list << {
    File srcDir

    // Create a file collection using a closure
    collection = files { srcDir.listFiles() }

    // Create a file collection using a Callable
    Callable callable = { srcDir.listFiles() } as Callable
    collection = files(callable)

    srcDir = file('src')
    println "Contents of $srcDir.name"
    collection.each { println relativePath(it) }

    srcDir = file('src2')
    println "Contents of $srcDir.name"
    collection.each { println relativePath(it) }
}

collection = files('src/file1.txt')

// Iterate over the files in the collection
collection.each {File file ->
    file.name
}

// Convert the collection to various types
Set set = collection.files
Set set2 = collection as Set
List list = collection as List
String path = collection.asPath
File file = collection.singleFile
File file2 = collection as File

// Add collections together
def collection2 = collection + files('src/file3.txt')

