logger.quiet('An info log message which is always logged.')
logger.error('An error log message.')
logger.warn('A warning log message.')
logger.lifecycle('A lifecycle info log message.')
logger.info('An info log message.')
logger.debug('A debug log message.')
logger.trace('A trace log message.')

println 'A message which is logged at QUIET level'

captureStandardOutput LogLevel.INFO
println 'A message which is logged at INFO level'

task logLifecycle << {
    println('A task message which is logged at LIFECYCLE level')
}
logLifecycle.captureStandardOutput(LogLevel.LIFECYCLE)

task logInfo << {
    println 'A task message which is logged at INFO level'
}
logInfo.captureStandardOutput(LogLevel.INFO)

task log(dependsOn: [logInfo, logLifecycle]) << {
    println('A task message which is logged at QUIET level')
}

ant.echo('An info message logged from Ant')

org.slf4j.Logger slf4jLogger = org.slf4j.LoggerFactory.getLogger('some-logger')
slf4jLogger.info('An info log message logged using SLF4j')

org.apache.commons.logging.Log jclLogger = org.apache.commons.logging.LogFactory.getLog('some-logger')
jclLogger.info('An info log message logged using JCL')

org.apache.log4j.Logger log4jLogger = org.apache.log4j.Logger.getLogger('some-logger')
log4jLogger.info('An info log message logged using Log4j')

java.util.logging.Logger julLogger = java.util.logging.Logger.getLogger('some-logger')
julLogger.info('An info log message logged using JUL')
