import org.junit.Assert

usePlugin('java')

version = '1.0'
group = 'org.gradle.test'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'junit:junit:4.7'
    }
}

ant {
    importBuild "$rootDir/build.xml"
    buildDir = owner.buildDir.toString()
}

repositories {
    flatDir(dirs: "$buildDir/repo", name: 'repo')
}

task sourceJar(type: Jar) {
    baseName = 'ivypublishSource'
    from sourceSets.main.java
}

artifacts {
    archives sourceJar
}

uploadArchives {
    repositories {
        add project.repositories.repo
    }
    doLast {
        File repoDir = new File("$buildDir/repo")
        Assert.assertEquals(["ivypublish-1.0.jar", "ivy-1.0.xml", "ivypublishSource-1.0.jar"] as Set,
            repoDir.listFiles().collect { it.name } as Set)
        Assert.assertEquals(jar.archivePath.size(), new File(repoDir, 'ivypublish-1.0.jar').size())
        Assert.assertEquals(sourceJar.archivePath.size(), new File(repoDir, 'ivypublishSource-1.0.jar').size())
    }
}

// It would be nice to test if the stuff published by Gradle can be read by a native ivy ant script.
// The tasks below are supposed to do this. But due to a serious Ivy bugs we can't do it at the
// moment (e.g. https://issues.apache.org/jira/browse/IVY-1110). As soon as this bug is fixed, we
// should uncomment the below.

//ivyConfigure.doLast {
//    def cacheDir = ant.properties['ivy.cache.dir'] + '/org.gradle.test'
//    println cacheDir
//    ant.delete(dir: cacheDir, verbose: true)
//}
//
//retrieveFromAnt {
//    dependsOn uploadArchives
//    doLast {
//        File retrieveDir = new File("$buildDir/antRetrieve")
//        Assert.assertEquals(retrieveDir.listFiles().collect { it.name } as Set,
//                ["ivypublish.jar", "ivypublishSource.jar"] as Set)
//        Assert.assertEquals(jar.archivePath.size(), new File(retrieveDir, 'ivypublish.jar').size())
//        Assert.assertEquals(sourceJar.archivePath.size(), new File(retrieveDir, 'ivypublishSource.jar').size())
//    }
//}





